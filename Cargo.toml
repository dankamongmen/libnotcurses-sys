[package]
name = "libnotcurses-sys"
version = "3.11.0"
authors = [
	"nick black <dankamongmen@gmail.com>",
	"Jos√© Luis Cruz <joseluis@andamira.net>"
]
license = "MIT OR Apache-2.0"
edition = "2021"
# https://packages.debian.org/trixie/libstd-rust-dev
rust-version = "1.65.0" # in sync with .github/workflows/check.yml
description = "Low-level Rust bindings for the notcurses C library."
documentation = "https://docs.rs/libnotcurses-sys/"
repository = "https://github.com/dankamongmen/libnotcurses-sys"
homepage = "https://nick-black.com/dankwiki/index.php/Notcurses"
readme = "./README.md"
links = "notcurses"
build = "build/build.rs"
categories = [
	"external-ffi-bindings",
	"command-line-interface",
	"visualization",
	"multimedia",
	"rendering",
]
keywords = ["tui", "cli", "terminal", "ncurses", "ffi"]
include = [
	"/build/",
	"/examples/hello-world-*.rs",
	"/src/**/*.rs",
	"/LICENSE-*",
	"/README.md"
]

[features]
default = ["libc", "keep_vendored"]
#
std = ["libc"]
#
nightly = []
nightly_docs = ["nightly", "std", "use_vendored_bindings"]

# enable this feature to keep the vendored files, instead of deleting them.
keep_vendored = []
# enable this feature to use the already vendored bindings to compile the crate.
# This eliminates the need to embed the C source in the crate just for docs.rs.
use_vendored_bindings = ["keep_vendored"]
# enable this feature to vendor the bindgen generated bindings into the crate.
# It needs to have https://github.com/dankamongmen/notcurses installed on path.
vendor_bindings = []

# enable this feature to vendor the C source code into the crate.
# It needs to have https://github.com/dankamongmen/notcurses installed on path.
vendor_csource = []
# enable this feature to compile the notcurses C source code.
compile_csource = ["cc", "keep_vendored"]


[dependencies]
# A dependency's version number must be the minimum available in all of:
# - [Debian Sid](https://tracker.debian.org/pkg/rust-libc)
# - [Fedora Rawhide](https://pkgs.org/search/?q=rust-libc-devel)
libc = { version = "0.2.152", default-features = false, optional = true }

[dev-dependencies]
serial_test = { version = "1.0.0" } # upgrade to 2.0 or 3.0 needs MSRV 1.68.2

# for the examples
rand = "0.8"

[build-dependencies]
# https://tracker.debian.org/pkg/rust-bindgen
# https://pkgs.org/search/?q=rust-bindgen
bindgen = { version = "0.66.1", default-features = false, features = ["runtime"] }
# https://tracker.debian.org/pkg/rust-pkg-config
# https://pkgs.org/search/?q=rust-pkg-config
pkg-config = "0.3.25"

cc = { version = "1.0", optional = true }


[package.metadata.docs.rs]
features = ["nightly_docs"]

[badges]
maintenance = { status = "passively-maintained" }
